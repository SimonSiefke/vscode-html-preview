name:
attribute delete #1

previousText:
<h1 class></h1>

edits:
[
  {
    rangeOffset: 4
    rangeLength: 5
    text: ""
  }
]

nextText:
<h1 ></h1>

expectedEdits:
[
  {
     command: attributeDelete
     payload: {
       attribute: class
     }
  }
]

name:
useless whitespace change #1

previousText:
<h1></h1>

edits:
[
  {
    rangeOffset: 3
    rangeLength: 0
    text: " "
  }
]

nextText:
<h1 ></h1>

expectedEdits:
[]

name:
useless whitespace change #2

previousText:
<h1><br  ></h1>

edits:
[
  {
    rangeOffset: 7
    rangeLength: 2
    text: ""
  }
]

nextText:
<h1><br></h1>

expectedEdits:
[]

name:
attribute change #1

previousText:
<h1 class></h1>

edits:
[
  {
    rangeOffset: 9
    rangeLength: 0
    text: '="green"'
  }
]

nextText:
<h1 class="green"></h1>

expectedEdits:
[
  {
    command: attributeChange
    payload: {
      attribute: class
      value: '"green"'
    }
  }
]

name:
attribute change #2

previousText:
<h1 class="gre"></h1>

edits:
[
  {
    rangeOffset: 14
    rangeLength: 0
    text: "en"
  }
]

nextText:
<h1 class="green"></h1>

expectedEdits:
[
  {
    command: attributeChange
    payload: {
      attribute: class
      value: '"green"'
    }
  }
]

name:
basic text insertion

previousText:
<h1><p>ok</p></h1>

edits:
[
  {
    rangeOffset: 4
    rangeLength: 0
    text: hello
  }
]

nextText:
<h1>hello<p>ok</p></h1>

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: hello
       beforeId: 0
     }
  }
]

name:
basic element insertion

previousText:
<h1><p>ok</p></h1>

edits:
[
  {
    rangeOffset: 4
    rangeLength: 0
    text: <p>ok</p>
  }
]

nextText:
<h1><p>ok</p><p>ok</p></h1>

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: ElementNode
       tag: p
       beforeId: 0
     }
  }
  {
    command: elementInsert
    payload:{
      nodeType: TextNode
      text: ok
      beforeId: 0
    }
  }
]

//previousText:
//<head>
//  <meta charset="utf-8" />
//</head>
//
//<body>
//  <p>dddddddddddd</p>
//</body>
//
//edits:
//[
//  {
//    rangeOffset: 74
//    rangeLength: 0
//    text: "\n<p>dddddddddddd</p>"
//  }
//]
//
//nextText:
//<head>
//  <meta charset="utf-8" />
//</head>
//
//<body>
//  <p>dddddddddddd</p>
//  <p>dddddddddddd</p>
//</body>
//
//expectedEdits:
//[
//  {
//     command: elementInsert
//     payload: {
//       nodeType: TextNode
//       text: "\n  "
//     }
//  }
//  {
//    command: elementInsert
//    payload:{
//      nodeType: ElementNode
//      tag: p
//    }
//  }
//  {
//    command: elementInsert
//    payload:{
//      nodeType: TextNode
//      text: dddddddddddd
//    }
//  }
//  {
//    command: elementInsert
//    payload:{
//      nodeType: TextNode
//      text: "\n"
//    }
//  }
//]

name:
basic text replace

previousText:
<h1>a</h1>

edits:
[
  {
    rangeOffset: 4
    rangeLength: 1
    text: b
  }
]

nextText:
<h1>b</h1>

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: "b"
     }
  }
]

name:
basic text addition

previousText:
<h1>aaa</h1>

edits:
[
  {
    rangeOffset: 7
    rangeLength: 0
    text: bbb
  }
]

nextText:
<h1>aaabbb</h1>

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: aaabbb
     }
  }
]

name:
element addition at the end

previousText:
<h1>a</h1>

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
<h1>a</h1><h1>b</h1>

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: ElementNode
       tag: h1
       beforeId: 1
     }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
element addition at the start

previousText:
<h1>a</h1>

edits:
[
  {
    rangeOffset: 0
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
<h1>b</h1><h1>a</h1>

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: ElementNode
       tag: h1
       beforeId: 0
     }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
text insertion in nested html

previousText:
<div>
  <img src="https://source.unsplash.com/random" alt="random image">
  <p>nested <strong>text</strong></p>
</div>

edits:
[
  {
    rangeOffset: 107
    rangeLength: 0
    text: !!!
  }
]

nextText:
<div>
  <img src="https://source.unsplash.com/random" alt="random image">
  <p>nested <strong>text</strong>!!!</p>
</div>

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: !!!
       beforeId: 7
     }
  }
]

name:
insertion of attribute with value

previousText:
<h1 >hello world</h1>

edits:
[
  {
    rangeOffset: 4
    rangeLength: 0
    text: 'class="big"'
  }
]

nextText:
<h1 class="big">hello world</h1>

expectedEdits:
[
  {
     command: attributeAdd
     payload: {
       attribute: class
       value: '"big"'
     }
  }
]

name:
insertion of attribute without value

previousText:
<h1 >hello world</h1>

edits:
[
  {
    rangeOffset: 4
    rangeLength: 0
    text: class
  }
]

nextText:
<h1 class>hello world</h1>

expectedEdits:
[
  {
     command: attributeAdd
     payload: {
       attribute: class
       value: null
     }
  }
]

name:
insertion of multiple elements and text nodes

previousText:
<form>
  First name:<br>
  <input type="text" name="firstName"><br>
</form>

edits:
[
  {
    rangeOffset: 68
    rangeLength: 0
    text: '  Last name:<br>\n  <input type="text" name="lastName"><br>\n'
  }
]

nextText:
<form>
  First name:<br>
  <input type="text" name="firstName"><br>
  Last name:<br>
  <input type="text" name="lastName"><br>
</form>

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: "\n  Last name:"
     }
  }
  {
    command: elementInsert,
    payload: {
      nodeType: ElementNode
      tag: br
      beforeId: 7
    }
  }
  {
    command: elementInsert,
    payload: {
      nodeType: TextNode
      text: "\n  "
      beforeId: 8
    }
  }
  {
    command: elementInsert,
    payload: {
      nodeType: ElementNode
      tag: input
      attributes: {
        name: '"lastName"'
        type: '"text"'
      },
      beforeId: 9
    }
  }
  {
    command: elementInsert,
    payload: {
      nodeType: ElementNode
      tag: br
      beforeId: 10
    }
  }
  {
    command: elementInsert,
    payload: {
      nodeType: TextNode
      text: "\n"
      beforeId: 11
    }
  }
]

name:
attribute name change

previousText:
<h1 c>hello world</h1>

edits:
[
  {
    rangeOffset: 5
    rangeLength: 0
    text: lass
  }
]

nextText:
<h1 class>hello world</h1>

expectedEdits:
[
  {
     command: attributeAdd
     payload: {
       attribute: class
       value: null
     }
  }
  {
     command: attributeDelete
     payload: {
       attribute: c
     }
  }
]

name:
attribute value insertion at the end

previousText:
<h1 class="big">hello world</h1>

edits:
[
  {
    rangeOffset: 14
    rangeLength: 0
    text: ger
  }
]

nextText:
<h1 class="bigger">hello world</h1>

expectedEdits:
[
  {
     command: attributeChange
     payload: {
       attribute: class
       value: '"bigger"'
     }
  }
]

name:
attribute value replacement

previousText:
<h1 class="big">hello world</h1>

edits:
[
  {
    rangeOffset: 11
    rangeLength: 3
    text: small
  }
]

nextText:
<h1 class="small">hello world</h1>

expectedEdits:
[
  {
     command: attributeChange
     payload: {
       attribute: class
       value: '"small"'
     }
  }
]

name:
replace text with element

previousText:
h1

edits:
[
  {
    rangeOffset: 0
    rangeLength: 2
    text: <h1></h1>
  }
]

nextText:
<h1></h1>

expectedEdits:
[
   {
     command: elementDelete
     payload: {}
  }
  {
     command: elementInsert
     payload: {
       nodeType: ElementNode
       tag: h1
       beforeId: 0
     }
  }
]

name:
basic replace text #1

previousText:
<h1>a</h1>

edits:
[
  {
    rangeOffset: 4
    rangeLength: 1
    text: b
  }
]

nextText:
<h1>b</h1>

expectedEdits:
[
   {
     command: textReplace
     payload: {
       text: b
     }
  }
]

name:
basic replace text #2

previousText:
<h1>aa</h1>

edits:
[
  {
    rangeOffset: 4
    rangeLength: 2
    text: b
  }
]

nextText:
<h1>b</h1>

expectedEdits:
[
   {
     command: textReplace
     payload: {
       text: b
     }
  }
]

name:
replace element with text

previousText:
<h1>hello world</h1>

edits:
[
  {
    rangeOffset: 0
    rangeLength: 20
    text: "hello world"
  }
]

nextText:
hello world

expectedEdits:
[
   {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: "hello world"
       beforeId: 0
     }
  }
  {
    command: elementDelete
    payload: {}
  }
]

name:
replace text inside element with attributes

previousText:
<h1 style="background:orange">a</h1>

edits:
[
  {
    rangeOffset: 30
    rangeLength: 1
    text: b
  }
]

nextText:
<h1 style="background:orange">b</h1>

expectedEdits:
[
   {
     command: textReplace
     payload: {
       text: b
     }
  }
]

//name:
//replace text after element node
//
//previousText:
//<!DOCTYPE html>
//<html lang="en">
//<head>
//  <meta charset="UTF-8">
//  <meta name="viewport" content="width=device-width, initial-scale=1.0">
//  <meta http-equiv="X-UA-Compatible" content="ie=edge">
//  <title>Document</title>
//</head>
//<body>
//  <h1>hello world</h1>
//</body>
//</html>
//
//edits:
//[
//  {
//    rangeOffset: 257
//    rangeLength: 0
//    text: "\n  "
//  }
//]
//
//nextText:
//<!DOCTYPE html>
//<html lang="en">
//<head>
//  <meta charset="UTF-8">
//  <meta name="viewport" content="width=device-width, initial-scale=1.0">
//  <meta http-equiv="X-UA-Compatible" content="ie=edge">
//  <title>Document</title>
//</head>
//<body>
//  <h1>hello world</h1>
//
//</body>
//</html>
//
//expectedEdits:
//[
//   {
//     command: textReplace
//     payload: {
//       text: "\n  \n"
//     }
//  }
//]
//
//name:
//replace text after element node and insert element
//
//previousText:
//<!DOCTYPE html>
//<html lang="en">
//<head>
//  <meta charset="UTF-8">
//  <meta name="viewport" content="width=device-width, initial-scale=1.0">
//  <meta http-equiv="X-UA-Compatible" content="ie=edge">
//  <title>Document</title>
//</head>
//<body>
//  <h1>hello</h1>
//  <button></button>
//</body>
//</html>
//
//edits:
//[
//  {
//    rangeOffset: 251
//    rangeLength: 0
//    text: "\n  "
//  }
//  {
//    rangeOffset: 254
//    rangeLength: 0
//    text: "<button></button>"
//  }
//]
//
//nextText:
//<!DOCTYPE html>
//<html lang="en">
//<head>
//  <meta charset="UTF-8">
//  <meta name="viewport" content="width=device-width, initial-scale=1.0">
//  <meta http-equiv="X-UA-Compatible" content="ie=edge">
//  <title>Document</title>
//</head>
//<body>
//  <h1>hello world</h1>
//  <button></button>
//</body>
//</html>
//
//expectedEdits:
//[
//   {
//     command: textReplace
//     payload: {
//       text: "\n  \n"
//     }
//  }
//]
//


name:
delete first element node

previousText:
<h1>hello</h1>
<button>button</button>

edits:
[
  {
    rangeOffset: 0
    rangeLength: 15
    text: ""
  }
]

nextText:
<button>button</button>

expectedEdits:
[
  {
     command: elementDelete
     payload: {}
  }
  {
     command: elementDelete
     payload: {}
  }
]

name:
delete element before element

previousText:
<h1>a</h1><h1>b</h1>

edits:
[
  {
    rangeOffset: 0
    rangeLength: 10
    text: ""
  }
]

nextText:
<h1>b</h1>

expectedEdits:
[
  {
     command: elementDelete
     payload: {}
  }
]

//name:
//delete element after elements
//
//previousText:
//<h1>a</h1><h1>b</h1>
//
//edits:
//[
//  {
//    rangeOffset: 10
//    rangeLength: 10
//    text: ""
//  }
//]
//
//nextText:
//<h1>b</h1>
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//]
//

name:
delete text before text

previousText:
ab

edits:
[
  {
    rangeOffset: 0
    rangeLength: 1
    text: ""
  }
]

nextText:
b

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: b
     }
  }
]

name:
delete text after text

previousText:
ab

edits:
[
  {
    rangeOffset: 1
    rangeLength: 1
    text: ""
  }
]

nextText:
a

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: a
     }
  }
]

//name:
//delete comment before comment
//
//previousText:
//<!--a--><!--b-->
//
//edits:
//[
//  {
//    rangeOffset: 0
//    rangeLength: 8
//    text: ""
//  }
//]
//
//nextText:
//<!--b-->
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//]
//

//previousText:
//<head>
//  <meta charset="utf-8" />
//</head>
//
//<body>
//  <p>dddddddddddd</p>
//</body>
//
//edits:
//[
//  {
//    rangeOffset: 74
//    rangeLength: 0
//    text: "\n<p>dddddddddddd</p>"
//  }
//]
//
//nextText:
//<head>
//  <meta charset="utf-8" />
//</head>
//
//<body>
//  <p>dddddddddddd</p>
//  <p>dddddddddddd</p>
//</body>
//
//expectedEdits:
//[
//  {
//     command: elementInsert
//     payload: {
//       nodeType: TextNode
//       text: "\n  "
//     }
//  }
//  {
//    command: elementInsert
//    payload:{
//      nodeType: ElementNode
//      tag: p
//    }
//  }
//  {
//    command: elementInsert
//    payload:{
//      nodeType: TextNode
//      text: dddddddddddd
//    }
//  }
//  {
//    command: elementInsert
//    payload:{
//      nodeType: TextNode
//      text: "\n"
//    }
//  }
//]

//name:
//replace text after element node
//
//previousText:
//<!DOCTYPE html>
//<html lang="en">
//<head>
//  <meta charset="UTF-8">
//  <meta name="viewport" content="width=device-width, initial-scale=1.0">
//  <meta http-equiv="X-UA-Compatible" content="ie=edge">
//  <title>Document</title>
//</head>
//<body>
//  <h1>hello world</h1>
//</body>
//</html>
//
//edits:
//[
//  {
//    rangeOffset: 257
//    rangeLength: 0
//    text: "\n  "
//  }
//]
//
//nextText:
//<!DOCTYPE html>
//<html lang="en">
//<head>
//  <meta charset="UTF-8">
//  <meta name="viewport" content="width=device-width, initial-scale=1.0">
//  <meta http-equiv="X-UA-Compatible" content="ie=edge">
//  <title>Document</title>
//</head>
//<body>
//  <h1>hello world</h1>
//
//</body>
//</html>
//
//expectedEdits:
//[
//   {
//     command: textReplace
//     payload: {
//       text: "\n  \n"
//     }
//  }
//]
////
//name:
//replace text after element node and insert element
//
//previousText:
//<!DOCTYPE html>
//<html lang="en">
//<head>
//  <meta charset="UTF-8">
//  <meta name="viewport" content="width=device-width, initial-scale=1.0">
//  <meta http-equiv="X-UA-Compatible" content="ie=edge">
//  <title>Document</title>
//</head>
//<body>
//  <h1>hello</h1>
//  <button></button>
//</body>
//</html>
//
//edits:
//[
//  {
//    rangeOffset: 251
//    rangeLength: 0
//    text: "\n  "
//  }
//  {
//    rangeOffset: 254
//    rangeLength: 0
//    text: "<button></button>"
//  }
//]
//
//nextText:
//<!DOCTYPE html>
//<html lang="en">
//<head>
//  <meta charset="UTF-8">
//  <meta name="viewport" content="width=device-width, initial-scale=1.0">
//  <meta http-equiv="X-UA-Compatible" content="ie=edge">
//  <title>Document</title>
//</head>
//<body>
//  <h1>hello world</h1>
//  <button></button>
//</body>
//</html>
//
//expectedEdits:
//[
//   {
//     command: textReplace
//     payload: {
//       text: "\n  \n"
//     }
//  }
//]
//

//name:
//delete comment before comment
//
//previousText:
//<!--a--><!--b-->
//
//edits:
//[
//  {
//    rangeOffset: 0
//    rangeLength: 8
//    text: ""
//  }
//]
//
//nextText:
//<!--b-->
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//]
//
//
//name:
//delete comment between comments
//
//previousText:
//<!--a--><!--b--><!--c-->
//
//edits:
//[
//  {
//    rangeOffset: 8
//    rangeLength: 8
//    text: ""
//  }
//]
//
//nextText:
//<!--a--><!--c-->
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//]
//
//name:
//delete comment after comment
//
//previousText:
//<!--a--><!--b-->
//
//edits:
//[
//  {
//    rangeOffset: 8
//    rangeLength: 8
//    text: ""
//  }
//]
//
//nextText:
//<!--a-->
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//]

name:
delete text before element

previousText:
a<h1>b</h1>

edits:
[
  {
    rangeOffset: 0
    rangeLength: 1
    text: ""
  }
]

nextText:
<h1>b</h1>

expectedEdits:
[
  {
     command: elementDelete
     payload: {}
  }
]

name:
delete text after element

previousText:
<h1>a</h1>b

edits:
[
  {
    rangeOffset: 10
    rangeLength: 1
    text: ""
  }
]

nextText:
<h1>a</h1>

expectedEdits:
[
  {
     command: elementDelete
     payload: {}
  }
]

name:
delete element before text

previousText:
<h1>a</h1>b

edits:
[
  {
    rangeOffset: 0
    rangeLength: 10
    text: ""
  }
]

nextText:
b

expectedEdits:
[
  {
     command: elementDelete
     payload: {}
  }
]

name:
delete element after text

previousText:
a<h1>b</h1>

edits:
[
  {
    rangeOffset: 1
    rangeLength: 10
    text: ""
  }
]

nextText:
a

expectedEdits:
[
  {
     command: elementDelete
     payload: {}
  }
]

name:
delete 000 - delete text between text and text

previousText:
abc

edits:
[
  {
    rangeOffset: 1
    rangeLength: 1
    text: ""
  }
]

nextText:
ac

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: ac
     }
  }
]

name:
delete 001 - delete text between text and element

previousText:
ab<h1>c</h1>

edits:
[
  {
    rangeOffset: 1
    rangeLength: 1
    text: ""
  }
]

nextText:
a<h1>c</h1>

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: a
     }
  }
]

name:
delete 002 - delete text between text and comment

previousText:
ab<!--c-->

edits:
[
  {
    rangeOffset: 1
    rangeLength: 1
    text: ""
  }
]

nextText:
a<!--c-->

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: a
     }
  }
]

//name:
//delete 010 - delete text between element and text
//
//previousText:
//<h1>a</h1>b<!--c-->
//
//edits:
//[
//  {
//    rangeOffset: 10
//    rangeLength: 1
//    text: ""
//  }
//]
//
//nextText:
//<h1>a</h1><!--c-->
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//]
//
name:
delete 011 - delete text between element and element

previousText:
<h1>a</h1>b<h1>c</h1>

edits:
[
  {
    rangeOffset: 10
    rangeLength: 1
    text: ""
  }
]

nextText:
<h1>a</h1><h1>c</h1>

expectedEdits:
[
  {
     command: elementDelete
     payload: {}
  }
]

//name:
//delete 012 - delete text between element and comment
//
//previousText:
//<h1>a</h1>b<!--c-->
//
//edits:
//[
//  {
//    rangeOffset: 10
//    rangeLength: 1
//    text: ""
//  }
//]
//
//nextText:
//<h1>a</h1><!--c-->
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//]

name:
delete 020 - delete text between comment and text

previousText:
<!--a-->bc

edits:
[
  {
    rangeOffset: 8
    rangeLength: 1
    text: ""
  }
]

nextText:
<!--a-->c

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: c
     }
  }
]

name:
delete 021 - delete text between comment and element

previousText:
<!--a-->b<h1>c</h1>

edits:
[
  {
    rangeOffset: 8
    rangeLength: 1
    text: ""
  }
]

nextText:
<!--a--><h1>c</h1>

expectedEdits:
[
  {
     command: elementDelete
     payload: {}
  }
]

//name:
//delete 022 - delete text between comment and comment
//
//previousText:
//<!--a-->b<!--c-->
//
//edits:
//[
//  {
//    rangeOffset: 8
//    rangeLength: 1
//    text: ""
//  }
//]
//
//nextText:
//<!--a--><!--c-->
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//]
//
name:
delete 100 - delete element between text and text

previousText:
a<h1>b</h1>c

edits:
[
  {
    rangeOffset: 1
    rangeLength: 10
    text: ""
  }
]

nextText:
ac

expectedEdits:
[
  {
    command: textReplace
    payload: {
      text: ac
    }
  }
  {
     command: elementDelete
     payload: {}
  }
  {
     command: elementDelete
     payload: {}
  }
]

name:
delete 101 - delete element between text and element

previousText:
a<h1>b</h1><h1>c</h1>

edits:
[
  {
    rangeOffset: 1
    rangeLength: 10
    text: ""
  }
]

nextText:
a<h1>c</h1>

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 102 - delete element between text and comment

previousText:
a<h1>b</h1><!--c-->

edits:
[
  {
    rangeOffset: 1
    rangeLength: 10
    text: ""
  }
]

nextText:
a<!--c-->

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 110 - delete element between element and text

previousText:
<h1>a</h1><h1>b</h1>c

edits:
[
  {
    rangeOffset: 10
    rangeLength: 10
    text: ""
  }
]

nextText:
<h1>a</h1>c

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 111 - delete element between element and element

previousText:
<h1>a</h1><h1>b</h1><h1>c</h1>

edits:
[
  {
    rangeOffset: 10
    rangeLength: 10
    text: ""
  }
]

nextText:
<h1>a</h1><h1>c</h1>

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 112 - delete element between element and comment

previousText:
<h1>a</h1><h1>b</h1><!--c-->

edits:
[
  {
    rangeOffset: 10
    rangeLength: 10
    text: ""
  }
]

nextText:
<h1>a</h1><!--c-->

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 120 - delete element between comment and text

previousText:
<!--a--><h1>b</h1>c

edits:
[
  {
    rangeOffset: 8
    rangeLength: 10
    text: ""
  }
]

nextText:
<!--a-->c

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 121 - delete element between comment and element

previousText:
<!--a--><h1>b</h1><h1>c</h1>

edits:
[
  {
    rangeOffset: 8
    rangeLength: 10
    text: ""
  }
]

nextText:
<!--a--><h1>c</h1>

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 122 - delete element between comment and comment

previousText:
<!--a--><h1>b</h1><!--c-->

edits:
[
  {
    rangeOffset: 8
    rangeLength: 10
    text: ""
  }
]

nextText:
<!--a--><!--c-->

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 200 - delete comment between text and text

previousText:
a<!--b-->c

edits:
[
  {
    rangeOffset: 1
    rangeLength: 8
    text: ""
  }
]

nextText:
ac

expectedEdits:
[
  {
    command: textReplace
    payload: {
      text: ac
    }
  }
  {
    command: elementDelete
    payload: {}
  }
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 201 - delete comment between text and element

previousText:
a<!--b--><h1>c</h1>

edits:
[
  {
    rangeOffset: 1
    rangeLength: 8
    text: ""
  }
]

nextText:
a<h1>c</h1>

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 202 - delete comment between text and comment

previousText:
a<!--b--><!--c-->

edits:
[
  {
    rangeOffset: 1
    rangeLength: 8
    text: ""
  }
]

nextText:
a<!--c-->

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]


name:
delete 210 - delete comment between element and text

previousText:
<h1>a</h1><!--b-->c

edits:
[
  {
    rangeOffset: 10
    rangeLength: 8
    text: ""
  }
]

nextText:
<h1>a</h1>c

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 211 - delete comment between element and element

previousText:
<h1>a</h1><!--b--><h1>c</h1>

edits:
[
  {
    rangeOffset: 10
    rangeLength: 8
    text: ""
  }
]

nextText:
<h1>a</h1><h1>c</h1>

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 212 - delete comment between element and comment

previousText:
<h1>a</h1><!--b--><!--c-->

edits:
[
  {
    rangeOffset: 10
    rangeLength: 8
    text: ""
  }
]

nextText:
<h1>a</h1><!--c-->

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 220 - delete comment between comment and text

previousText:
<!--a--><!--b-->c

edits:
[
  {
    rangeOffset: 8
    rangeLength: 8
    text: ""
  }
]

nextText:
<!--a-->c

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 221 - delete comment between comment and element

previousText:
<!--a--><!--b--><h1>c</h1>

edits:
[
  {
    rangeOffset: 8
    rangeLength: 8
    text: ""
  }
]

nextText:
<!--a--><h1>c</h1>

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
delete 222 - delete comment between comment and comment

previousText:
<!--a--><!--b--><!--c-->

edits:
[
  {
    rangeOffset: 8
    rangeLength: 8
    text: ""
  }
]

nextText:
<!--a--><!--c-->

expectedEdits:
[
  {
    command: elementDelete
    payload: {}
  }
]

name:
insert 000 - insert text between text and text

previousText:
ac

edits:
[
  {
    rangeOffset: 1
    rangeLength: 0
    text: b
  }
]

nextText:
abc

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: abc
     }
  }
]

name:
insert 001 - insert text between text and element

previousText:
a<h1>c</h1>

edits:
[
  {
    rangeOffset: 1
    rangeLength: 0
    text: b
  }
]

nextText:
ab<h1>c</h1>

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: ab
     }
  }
]

name:
insert 002 - insert text between text and comment

previousText:
a<!--c-->

edits:
[
  {
    rangeOffset: 1
    rangeLength: 0
    text: b
  }
]

nextText:
ab<!--c-->

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: ab
     }
  }
]

name:
insert 010 - insert text between element and text

previousText:
<h1>a</h1><!--c-->

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: "b"
  }
]

nextText:
<h1>a</h1>b<!--c-->

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: b
       beforeId: 1
     }
  }
]

name:
insert 011 - insert text between element and element

previousText:
<h1>a</h1><h1>c</h1>

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: b
  }
]

nextText:
<h1>a</h1>b<h1>c</h1>

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: b
       beforeId: 1
     }
  }
]

name:
insert 012 - insert text between element and comment

previousText:
<h1>a</h1><!--c-->

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: b
  }
]

nextText:
<h1>a</h1>b<!--c-->

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: b
       beforeId: 1
    }
  }
]

name:
insert 020 - insert text between comment and text

previousText:
<!--a-->c

edits:
[
  {
    rangeOffset: 8
    rangeLength: 0
    text: b
  }
]

nextText:
<!--a-->bc

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: bc
     }
  }
]

name:
insert 021 - insert text between comment and element

previousText:
<!--a--><h1>c</h1>

edits:
[
  {
    rangeOffset: 8
    rangeLength: 0
    text: b
  }
]

nextText:
<!--a-->b<h1>c</h1>

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: b
       beforeId: 1
     }
  }
]

name:
insert 022 - insert text between comment and comment

previousText:
<!--a--><!--c-->

edits:
[
  {
    rangeOffset: 8
    rangeLength: 0
    text: b
  }
]

nextText:
<!--a-->b<!--c-->

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: b
       beforeId: 1
     }
  }
]

name:
insert 100 - insert element between text and text

previousText:
ac

edits:
[
  {
    rangeOffset: 1
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
a<h1>b</h1>c

expectedEdits:
[
  {
    command: textReplace
    payload: {
      text: a
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: ElementNode
      tag: h1
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: c
      beforeId: 2
    }
  }
]

name:
insert 101 - insert element between text and element

previousText:
a<h1>c</h1>

edits:
[
  {
    rangeOffset: 1
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
a<h1>b</h1><h1>c</h1>

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: ElementNode
      tag: h1
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
insert 102 - insert element between text and comment

previousText:
a<!--c-->

edits:
[
  {
    rangeOffset: 1
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
a<h1>b</h1><!--c-->

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: ElementNode
      tag: h1
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
insert 110 - insert element between element and text

previousText:
<h1>a</h1>c

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
<h1>a</h1><h1>b</h1>c

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: ElementNode
      tag: h1
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
insert 111 - insert element between element and element

previousText:
<h1>a</h1><h1>c</h1>

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
<h1>a</h1><h1>b</h1><h1>c</h1>

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: ElementNode
      tag: h1
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
insert 112 - insert element between element and comment

previousText:
<h1>a</h1><!--c-->

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
<h1>a</h1><h1>b</h1><!--c-->

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: ElementNode
      tag: h1
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
insert 120 - insert element between comment and text

previousText:
<!--a-->c

edits:
[
  {
    rangeOffset: 8
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
<!--a--><h1>b</h1>c

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: ElementNode
      tag: h1
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
insert 121 - insert element between comment and element

previousText:
<!--a--><h1>c</h1>

edits:
[
  {
    rangeOffset: 8
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
<!--a--><h1>b</h1><h1>c</h1>

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: ElementNode
      tag: h1
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
insert 122 - insert element between comment and comment

previousText:
<!--a--><!--c-->

edits:
[
  {
    rangeOffset: 8
    rangeLength: 0
    text: <h1>b</h1>
  }
]

nextText:
<!--a--><h1>b</h1><!--c-->

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: ElementNode
      tag: h1
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: b
      beforeId: 0
    }
  }
]

name:
insert 200 - insert comment between text and text

previousText:
ac

edits:
[
  {
    rangeOffset: 1
    rangeLength: 0
    text: <!--b-->
  }
]

nextText:
a<!--b-->c

expectedEdits:
[
  {
    command: textReplace
    payload: {
      text: a
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: CommentNode
      text: b
      beforeId: 1
    }
  }
  {
    command: elementInsert
    payload: {
      nodeType: TextNode
      text: c
      beforeId: 2
    }
  }
]

name:
insert 201 - insert comment between text and element

previousText:
a<h1>c</h1>

edits:
[
  {
    rangeOffset: 1
    rangeLength: 0
    text: <!--b-->
  }
]

nextText:
a<!--b--><h1>c</h1>

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: CommentNode
      text: b
      beforeId: 1
    }
  }
]

name:
insert 202 - insert comment between text and comment

previousText:
a<!--c-->

edits:
[
  {
    rangeOffset: 1
    rangeLength: 0
    text: <!--b-->
  }
]

nextText:
a<!--b--><!--c-->

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: CommentNode
      text: b
      beforeId: 1
    }
  }
]


name:
insert 210 - insert comment between element and text

previousText:
<h1>a</h1>c

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: <!--b-->
  }
]

nextText:
<h1>a</h1><!--b-->c

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: CommentNode
      text: b
      beforeId: 1
    }
  }
]

name:
insert 211 - insert comment between element and element

previousText:
<h1>a</h1><h1>c</h1>

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: <!--b-->
  }
]

nextText:
<h1>a</h1><!--b--><h1>c</h1>

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: CommentNode
      text: b
      beforeId: 1
    }
  }
]

name:
insert 212 - insert comment between element and comment

previousText:
<h1>a</h1><!--c-->

edits:
[
  {
    rangeOffset: 10
    rangeLength: 0
    text: <!--b-->
  }
]

nextText:
<h1>a</h1><!--b--><!--c-->

expectedEdits:
[
   {
    command: elementInsert
    payload: {
      nodeType: CommentNode
      text: b
      beforeId: 1
    }
  }
]

name:
insert 220 - insert comment between comment and text

previousText:
<!--a-->c

edits:
[
  {
    rangeOffset: 8
    rangeLength: 0
    text: <!--b-->
  }
]

nextText:
<!--a--><!--b-->c

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: CommentNode
      text: b
      beforeId: 1
    }
  }
]

name:
insert 221 - insert comment between comment and element

previousText:
<!--a--><h1>c</h1>

edits:
[
  {
    rangeOffset: 8
    rangeLength: 0
    text: <!--b-->
  }
]

nextText:
<!--a--><!--b--><h1>c</h1>

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: CommentNode
      text: b
      beforeId: 1
    }
  }
]

name:
insert 222 - insert comment between comment and comment

previousText:
<!--a--><!--c-->

edits:
[
  {
    rangeOffset: 8
    rangeLength: 0
    text: <!--b-->
  }
]

nextText:
<!--a--><!--b--><!--c-->

expectedEdits:
[
  {
    command: elementInsert
    payload: {
      nodeType: CommentNode
      text: b
      beforeId: 1
    }
  }
]

name:
test because of bug #1

previousText:
<html>

<head>
  <title>Document</title>
  <style>
  </style>
</head>

<body>

</body>

</html>

edits:
[
  {
    rangeOffset: 53
    rangeLength: 0
    text: "  "
  }
]

nextText:
<html>

<head>
  <title>Document</title>
  <style>
    </style>
</head>

<body>

</body>

</html>

expectedEdits:
[
  {
     command: textReplace
     payload: {
       text: "\n    "
     }
  }
]

//name:
//test because of bug #2
//
//previousText:
//<html>
//
//<head>
//  <title>Document</title>
//  <style>
//    }
//  </style>
//</head>
//
//<body>
//  <h1 style="height:1000px">hello world!!!!!</h1>
//  <p>hello world!!!</p>
//</body>
//
//</html>
//
//edits:
//[
//  {
//    rangeOffset: 52
//    rangeLength: 6
//    text: ""
//  }
//]

//nextText:
//<html>
//
//<head>
//  <title>Document</title>
//  <style>
//  </style>
//</head>
//
//<body>
//  <h1 style="height:1000px">hello world!!!!!</h1>
//  <p>hello world!!!</p>
//</body>
//
//</html>
//
//expectedEdits:
//[
//  {
//     command: textReplace
//     payload: {
//       text: "\n  "
//     }
//  }
//]
//
//name:
//replace element with same length element
//
//previousText:
//<div>
//  <h1>hello world</h1>
//</div>
//
//edits:
//[
//  {
//    rangeOffset: 8
//    rangeLength: 20
//    text: "<h2>hello world</h2>"
//  }
//]
//
//nextText:
//<div>
//  <h2>hello world</h2>
//</div>
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//  {
//     command: elementInsert
//     payload: {
//       nodeType: ElementNode
//       tag: h2
//     }
//  }
//  {
//     command: elementInsert
//     payload: {
//       nodeType: TextNode
//       text: "hello world"
//     }
//  }
//]

//name:
//replace element with longer length element
//
//previousText:
//<div>
//  <h1>hello world</h1>
//</div>
//
//edits:
//[
//  {
//    rangeOffset: 8
//    rangeLength: 20
//    text: "<button>hello world</button>"
//  }
//]
//
//nextText:
//<div>
//  <button>hello world</button>
//</div>
//
//expectedEdits:
//[
//  {
//     command: elementDelete
//     payload: {}
//  }
//  {
//     command: elementInsert
//     payload: {
//       nodeType: ElementNode
//       tag: button
//     }
//  }
//  {
//     command: elementInsert
//     payload: {
//       nodeType: TextNode
//       text: "hello world"
//     }
//  }
//]

name:
test because of bug #3

previousText:
<h1>a</h1>

edits:
[
  {
    rangeOffset: 0
    rangeLength: 0
    text: "<h1>a</h1>\n"
  }
]

nextText:
<h1>a</h1>
<h1>a</h1>

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: ElementNode
       tag: h1
       beforeId: 0
     }
  }
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: a
       beforeId: 0
     }
  }
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: "\n"
       beforeId: 3
     }
  }
]

name:
test because of bug #4

previousText:
<h1>a</h1>
<h1>a</h1>

edits:
[
  {
    rangeOffset: 11
    rangeLength: 0
    text: "<h1>a</h1>\n"
  }
]

nextText:
<h1>a</h1>
<h1>a</h1>
<h1>a</h1>

expectedEdits:
[
  {
     command: elementInsert
     payload: {
       nodeType: ElementNode
       tag: h1
       beforeId: 3
     }
  }
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: a
       beforeId: 0
     }
  }
  {
     command: elementInsert
     payload: {
       nodeType: TextNode
       text: "\n"
       beforeId: 6
     }
  }
]

name:
doctype and whitespace #1

previousText:
<!DOCTYPE html>

edits:
[
  {
    rangeOffset: 15
    rangeLength: 0
    text: "\n"
  }
]

nextText:
<!DOCTYPE html>


expectedEdits:
[
  {
    command: elementInsert
    payload: {
      beforeId: 1
      nodeType: TextNode
      text: "\n"
    }
  }
]

name:
doctype and whitespace #2

previousText:
<!doctype html>

edits:
[
  {
    rangeOffset: 15
    rangeLength: 0
    text: "\n"
  }
]

nextText:
<!doctype html>


expectedEdits:
[
  {
    command: elementInsert
    payload: {
      beforeId: 1
      nodeType: TextNode
      text: "\n"
    }
  }
]

name:
doctype and whitespace #3

previousText:
<!doctype html>


edits:
[
  {
    rangeOffset: 15
    rangeLength: 1
    text: ""
  }
]

nextText:
<!doctype html>

expectedEdits:
[
  {
    command: elementDelete,
    payload: {}
  }
]
